name: 'Merge Main'

# Run this workflow on a pull request to main
on:
  push:
    branches:
      - move-sensitive-env
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  build:
    name: Build
    # if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup Docker Build
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Login to ECR
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-2.amazonaws.com
          username: ${{ secrets.AWS_ACCESS_KEY_ID }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
      - name: Push Image to ECR
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: Dockerfile
          push: true
          tags: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-southeast-2.amazonaws.com/sweatybot:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    environment: production
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
      
      - name: Terraform Init
        run: terraform init -backend-config="key=$GITHUB_REF.tfstate" -input=false
        working-directory: terraform
      
      - name: Terraform Apply
        run: terraform apply -input=false -auto-approve
        working-directory: terraform
        env:
          TF_VAR_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
          TF_VAR_discord_client_token: ${{ secrets.DISCORD_CLIENT_TOKEN }}
          TF_VAR_psql_host: ${{ secrets.PSQL_HOST }}
          TF_VAR_psql_username: ${{ secrets.PSQL_USERNAME }}
          TF_VAR_psql_password: ${{ secrets.PSQL_PASSWORD }}
          TF_VAR_RUN_ID: ${{ github.run_id }}
